//variables to setup basic size and shape of the card and pips
$card-width: 40vw;
$card-height: $card-width*1.4;
$font-size-number: $card-width * 0.1;
$icon-size: $card-width / 5;

$num-columns : 8;
$one-column : 100% / $num_columns;
$loop-start: 1;
$loop-end: $num-columns +1;

@mixin col($span-num) {
    flex: 0 0 12.5% * $span-num;
}   
@mixin offset($offset-num) {
    margin-left: 12.5% * $offset-num;
}

*,
*:before,
*:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

//styles to draw a basic outline of a card
.card {
    border: 1px solid grey;
    height: $card-height;
    width: $card-width;
    border-radius: 10px;
    margin: 20px;
    box-shadow: 2px 2px 4px grey;
}

//because it is a card front we want a bit of extra padding
.card-front {
    padding: .5em;
}

//set icon size
.icon {
    width: $icon-size;
    height: $icon-size;
}

.number {
    text-align: center;
    font-size: $font-size-number;
  //an icon that is part of a number should be half the normal size
    & > .icon {
        width: $icon-size * .5;
        height: $icon-size *.5;
    }
}

//rotate bottom pips 180deg
.rotate {
    transform: rotate(180deg);
}

// grid layout
.grid {
    display: grid;
    grid-template-columns: 1fr 2fr 2fr 2fr 1fr;
    grid-template-areas: 
      "one two . three ."
      ". . four . ."
      ". five . six ."
      ". seven . eight nine";
  }
  .cell-1 {
    grid-area: one;
  }
  .cell-2 {
    grid-area: two;
  }
  .cell-3 {
    grid-area: three;
  }
  .cell-4 {
    grid-area: four;
  }
  .cell-5 {
    grid-area: five;
  }
  .cell-6 {
    grid-area: six;
  }
  .cell-7 {
    grid-area: seven;
  }
  .cell-8 {
    grid-area: eight;
  }
  .cell-9 {
    grid-area: nine;
  }
  .offset {
    margin-bottom: $icon-size * .8;
  }

// flex layout for browsers not supporting grid      
@supports not (display: grid) {
    @import 'partials/flex';
}